@page "/supplies/add"
@using Classroom_supplies.Model
@inject ClassroomSupplyService SupplyService
@inject NavigationManager NavigationManager

<h1>Add New Supply</h1>

<EditForm Model="supply" OnValidSubmit="AddSupply">
    <DataAnnotationsValidator />

    <!-- Name -->
    <div class="form-group row">
        <label for="name" class="col-sm-2 col-form-label">Name</label>
        <div class="col-sm-10">
            <InputText id="name" @bind-Value="supply.Name" class="form-control" />
            <ValidationMessage For="() => supply.Name" />
        </div>
    </div>

    <!-- Supply Category -->
    <div class="form-group row">
        <label for="supplyCategory" class="col-sm-2 col-form-label">Supply Category</label>
        <div class="col-sm-10">
            <select id="supplyCategory" @bind="supply.SupplyCategory" class="form-control">
                @foreach (SupplyCategory category in Enum.GetValues(typeof(SupplyCategory)))
                {
                    <option value="@category">@category</option>
                }
            </select>
        </div>
    </div>

    <!-- Quantity -->
    <div class="form-group row">
        <label for="quantity" class="col-sm-2 col-form-label">Quantity</label>
        <div class="col-sm-10">
            <InputNumber id="quantity" @bind-Value="supply.Quantity" class="form-control" />
            <ValidationMessage For="() => supply.Quantity" />
        </div>
    </div>

    <!-- Unit -->
    <div class="form-group row">
        <label for="unit" class="col-sm-2 col-form-label">Unit</label>
        <div class="col-sm-10">
            <InputText id="unit" @bind-Value="supply.Unit" class="form-control" />
            <ValidationMessage For="() => supply.Unit" />
        </div>
    </div>

    <!-- Unit Price -->
    <div class="form-group row">
        <label for="unitPrice" class="col-sm-2 col-form-label">Unit Price</label>
        <div class="col-sm-10">
            <InputNumber id="unitPrice" @bind-Value="supply.UnitPrice" class="form-control" />
            <ValidationMessage For="() => supply.UnitPrice" />
        </div>
    </div>

    <!-- Supplier -->
    <div class="form-group row">
        <label for="supplier" class="col-sm-2 col-form-label">Supplier</label>
        <div class="col-sm-10">
            <InputText id="supplier" @bind-Value="supply.Supplier" class="form-control" />
            <ValidationMessage For="() => supply.Supplier" />
        </div>
    </div>

    <!-- Purchase Date -->
    <div class="form-group row">
        <label for="purchaseDate" class="col-sm-2 col-form-label">Purchase Date</label>
        <div class="col-sm-10">
            <InputDate id="purchaseDate" @bind-Value="supply.PurchaseDate" class="form-control" />
            <ValidationMessage For="() => supply.PurchaseDate" />
        </div>
    </div>

    <!-- Location -->
    <div class="form-group row">
        <label for="location" class="col-sm-2 col-form-label">Location</label>
        <div class="col-sm-10">
            <InputText id="location" @bind-Value="supply.Location" class="form-control" />
            <ValidationMessage For="() => supply.Location" />
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-10 offset-sm-2">
            <button type="submit" class="btn btn-primary">Save</button>
            <button @onclick="GoBack" class="btn btn-secondary">Cancel</button>
        </div>
    </div>
    <button @onclick="AddSupply">Save</button>
    <button @onclick="GoBack">Cancel</button>
</EditForm>

@code {
    private ClassroomSupply supply = new ClassroomSupply();

    private void AddSupply()
    {
        SupplyService.CreateSupplyAsync(supply);

        NavigationManager.NavigateTo("/supplies");
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/supplies");
    }
}
